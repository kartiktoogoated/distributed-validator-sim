version: '3.8'

services:
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - raftnet

  grafana:
    image: grafana/grafana
    ports:
      - "3003:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - raftnet

  db:
    image: postgres:14-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - raftnet

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"
    networks:
      - raftnet

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    networks:
      - raftnet

  aggregator:
    build:
      context: .
      dockerfile: apps/server/src/services/aggregator/Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env.aggregator
    environment:
      - IS_AGGREGATOR=true
    depends_on:
      - db
      - kafka
    networks:
      - raftnet
    command: >
      sh -c "
        echo 'ðŸ•’ Waiting for DB...' &&
        until nc -z db 5432; do sleep 1; done &&
        echo 'ðŸ•’ Waiting for Kafka...' &&
        until nc -z kafka 9092; do sleep 1; done &&
        echo 'âœ… All services ready, running migrations...' &&
        cd /app/packages/db &&
        npx prisma migrate deploy &&
        echo 'ðŸš€ Starting Aggregator...' &&
        node /app/apps/server/dist/src/services/aggregator/server.js
      "

  api-server:
    build:
      context: .
      dockerfile: apps/server/src/services/api-server/Dockerfile
    ports:
      - "3004:3004"
    env_file:
      - .env.api-server
    environment:
      - PORT=3004
    depends_on:
      - db
      - kafka
    networks:
      - raftnet
    command: >
      sh -c "
        echo 'ðŸ•’ Waiting for DB...' &&
        until nc -z db 5432; do sleep 1; done &&
        echo 'âœ… DB ready, running migrations...' &&
        cd /app/packages/db &&
        npx prisma migrate deploy &&
        echo 'ðŸš€ Starting API Server...' &&
        node /app/apps/server/dist/src/services/api-server/api-server.js
      "

  validator-1:
    build:
      context: .
      dockerfile: apps/server/src/services/validator/Dockerfile
    ports:
      - "3001:3000"
    env_file:
      - .env.nodeB
    depends_on:
      - db
      - aggregator
    networks:
      - raftnet
    cap_add:
      - NET_RAW
    command: >
      sh -c "
        echo 'ðŸ•’ Waiting for DB...' &&
        until nc -z db 5432; do sleep 1; done &&
        echo 'ðŸ•’ Waiting for Aggregator...' &&
        until curl -s http://aggregator:3000/health > /dev/null; do sleep 1; done &&
        echo 'âœ… All services ready, running migrations...' &&
        cd /app/packages/db &&
        npx prisma migrate deploy &&
        echo 'ðŸš€ Starting Validator 1...' &&
        node /app/apps/server/dist/src/services/validator/server.js
      "

  validator-2:
    build:
      context: .
      dockerfile: apps/server/src/services/validator/Dockerfile
    ports:
      - "3002:3000"
    env_file:
      - .env.nodeC
    depends_on:
      - db
      - aggregator
    networks:
      - raftnet
    cap_add:
      - NET_RAW
    command: >
      sh -c "
        echo 'ðŸ•’ Waiting for DB...' &&
        until nc -z db 5432; do sleep 1; done &&
        echo 'ðŸ•’ Waiting for Aggregator...' &&
        until curl -s http://aggregator:3000/health > /dev/null; do sleep 1; done &&
        echo 'âœ… All services ready, running migrations...' &&
        cd /app/packages/db &&
        npx prisma migrate deploy &&
        echo 'ðŸš€ Starting Validator 2...' &&
        node /app/apps/server/dist/src/services/validator/server.js
      "

volumes:
  db_data:
  grafana-storage:

networks:
  raftnet:
    driver: bridge
